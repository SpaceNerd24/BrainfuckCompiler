function compiler(parsedCode) {
    const jsCode = [];

    jsCode.push("// Generated by SpaceNerd24's Brainfuck compiler");

    // Header
    jsCode.push('let memory = new Array(30000).fill(0);');
    jsCode.push('let pointer = 0;');
    jsCode.push('let input = "";');
    jsCode.push('let inputIndex = 0;');

    parsedCode.forEach(token => {
        if (token.type === 'COMMAND') {
            switch (token.value) {
                case '>':
                    jsCode.push('pointer++;');
                    break;
                case '<':
                    jsCode.push('pointer--;');
                    break;
                case '+':
                    jsCode.push('memory[pointer]++;');
                    break;
                case '-':
                    jsCode.push('memory[pointer]--;');
                    break;
                case '.':
                    jsCode.push('process.stdout.write(String.fromCharCode(memory[pointer]));');
                    break;
                case ',':
                    jsCode.push('memory[pointer] = input.charCodeAt(inputIndex++);');
                    break;
                case '[':
                    jsCode.push('while (memory[pointer]) {');
                    break;
                case ']':
                    jsCode.push('}');
                    break;
            }
        } else if (token.type === 'LOOP_START') {
            jsCode.push('while (memory[pointer]) {');
        } else if (token.type === 'LOOP_END') {
            jsCode.push('}');
        }
    });

    return jsCode.join('\n');
}

module.exports = compiler;
